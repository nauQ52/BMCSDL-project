--
-- QUAN LY CUA HANG TIEN LOI
--

--
-- PROCEDURE
--

-- PROC DANG KI USER CHO USER SYS
CREATE OR REPLACE PROCEDURE SP_CREATEUSER
(username IN VARCHAR2,
pass IN VARCHAR2,
tblspace IN VARCHAR2,
quta IN VARCHAR2,
prof IN VARCHAR2) 
IS
BEGIN
    EXECUTE IMMEDIATE 'CREATE USER ' || username || ' IDENTIFIED BY ' || pass || ' DEFAULT TABLESPACE ' || tblspace || ' QUOTA ' || quta || ' ON ' || tblspace || ' PROFILE ' || prof;
    EXECUTE IMMEDIATE 'GRANT CREATE SESSION TO ' || username;
    EXECUTE IMMEDIATE 'GRANT SELECT ON DOAN.SANPHAM TO ' || username;
    --EXECUTE IMMEDIATE 'GRANT SELECT ON DOAN.HOADON TO ' || username;
    --EXECUTE IMMEDIATE 'GRANT SELECT ON DOAN.TAIKHOAN TO ' || username;
    --EXECUTE IMMEDIATE 'GRANT INSERT, DELETE, UPDATE ON DOAN.SANPHAM TO ' || username;
    --EXECUTE IMMEDIATE 'GRANT INSERT, DELETE, UPDATE ON DOAN.HOADON TO ' || username;
    --EXECUTE IMMEDIATE 'GRANT DELETE, UPDATE ON DOAN.TAIKHOAN TO ' || username;
    EXECUTE IMMEDIATE 'GRANT EXECUTE ON DOAN.CAESARCIPHER TO ' || username;
    EXECUTE IMMEDIATE 'GRANT EXECUTE ON DOAN.DES TO ' || username;
    EXECUTE IMMEDIATE 'GRANT EXECUTE ON DOAN.MULTIENCRYPTION TO ' || username;
    EXECUTE IMMEDIATE 'GRANT EXECUTE ON DOAN.TRIPDES TO ' || username;
END;
/

-- PROC DANG XUAT USER CHO USER SYS
CREATE OR REPLACE PROCEDURE SP_LOGOUTUSER
(v_username IN VARCHAR2)
IS
BEGIN
    FOR rec IN (SELECT SID, SERIAL# FROM V$SESSION WHERE USERNAME = UPPER(v_username))
    LOOP 
        BEGIN
            EXECUTE IMMEDIATE 'ALTER SYSTEM KILL SESSION ''' || rec.SID || ',' || rec.SERIAL# || ''' IMMEDIATE';
        END;
    END LOOP;
END;

EXEC SP_LOGOUTUSER('DOAN');
/

-- PROC XÁC THỰC HASH
CREATE OR REPLACE PROCEDURE SP_AUTHHASH(
    v_user IN DOAN.taikhoan.tendangnhap%TYPE,
    v_Mes IN VARCHAR2,
    v_pass OUT DOAN.taikhoan.matkhau%TYPE
)
IS
    v_check VARCHAR2(50);
BEGIN
    SELECT MATKHAU INTO v_check FROM DOAN.TAIKHOAN WHERE TENDANGNHAP = v_user;
    v_check := RAWTOHEX(F_MD5_HASH(v_check));
    IF v_Mes = v_check THEN 
        SELECT MATKHAU INTO v_pass FROM DOAN.TAIKHOAN WHERE TENDANGNHAP = v_user;
      ELSE 
        v_pass := ' ';
    END IF;
END;

DECLARE
    v_user CHAR(20) := 'DOAN';
    v_check VARCHAR2(50);
BEGIN
    SELECT MATKHAU INTO v_check FROM DOAN.TAIKHOAN WHERE TENDANGNHAP = v_user;
    v_check := RAWTOHEX(F_MD5_HASH(v_check));
    DBMS_OUTPUT.PUT_LINE(v_check);
END;

SELECT MATKHAU FROM TAIKHOAN WHERE TENDANGNHAP = 'DOAN';

-- PROC RANDOM NONCE
CREATE OR REPLACE PROCEDURE SP_RANDOMNONCE(            
    nonce OUT VARCHAR2           
)
IS  
    v_random NUMBER(5);           
BEGIN
    v_random := TRUNC(DBMS_RANDOM.VALUE(10000, 99999));

    nonce := TO_CHAR(v_random);
END;

--GRANT EXECUTE ON DOAN.SP_RANDOMNONCE TO PUBLIC;

DECLARE
    v_var VARCHAR2(5);
BEGIN
    SP_RANDOMNONCE(v_var);
    DBMS_OUTPUT.PUT_LINE(v_var);
END;
/

-- PROC XÁC THỰC CHALLENGE - RESPONSE
CREATE OR REPLACE PROCEDURE SP_AUTHCHALLENGERES (
    v_user IN DOAN.taikhoan.tendangnhap%TYPE,
    v_Mes IN VARCHAR2,
    v_Nonce IN VARCHAR2,
    v_pass OUT DOAN.taikhoan.matkhau%TYPE
)
IS
    v_check VARCHAR2(100);
BEGIN
    SELECT MATKHAU INTO v_check FROM TAIKHOAN WHERE TENDANGNHAP = v_user;
    v_check := v_check || v_Nonce;
    v_check := RAWTOHEX(F_MD5_HASH(v_check));
    IF v_Mes = v_check THEN 
        SELECT MATKHAU INTO v_pass FROM TAIKHOAN WHERE TENDANGNHAP = v_user;
      ELSE 
        v_pass := ' ';
    END IF;
END;

--GRANT EXECUTE ON DOAN.SP_AUTHCHALLENGERES TO PUBLIC;
/

-- PROC LAY DANH SACH TABLESPACES USER SYS
CREATE OR REPLACE PROCEDURE SP_NAME_TABLESPACE(cur OUT sys_refcursor)
IS
BEGIN
    OPEN cur FOR
        SELECT DISTINCT TABLESPACE_NAME FROM dba_tablespaces;
END;

-- PROC LAY DANH SACH PROFILES USER SYS
CREATE OR REPLACE PROCEDURE SP_NAME_PROFILE(cur OUT sys_refcursor)
IS
BEGIN
    OPEN cur FOR
        SELECT DISTINCT PROFILE FROM dba_profiles;
END;


-- Thủ tục thêm sản phẩm
CREATE OR REPLACE PROCEDURE ADD_SANPHAM (
    P_MASP     IN VARCHAR2,
    P_TENSP    IN NVARCHAR2,
    P_DONGIA   IN FLOAT,
    P_SOLUONG  IN NUMBER,
    P_LOAISP   IN NVARCHAR2
) AS
BEGIN
    INSERT INTO SANPHAM (MASP, TENSP, DONGIA, SOLUONG, LOAISP)
    VALUES (P_MASP, P_TENSP, P_DONGIA, P_SOLUONG, P_LOAISP);
END;
/

-- Thủ tục xóa sản phẩm
CREATE OR REPLACE PROCEDURE DELETE_SANPHAM (
    P_MASP IN VARCHAR2
) AS
BEGIN
    DELETE FROM SANPHAM
    WHERE MASP = P_MASP;
END;
/

-- Thủ tục sửa sản phẩm
CREATE OR REPLACE PROCEDURE UPDATE_SANPHAM (
    P_MASP     IN VARCHAR2,
    P_TENSP    IN NVARCHAR2,
    P_DONGIA   IN FLOAT,
    P_SOLUONG  IN NUMBER,
    P_LOAISP   IN NVARCHAR2
) AS
BEGIN
    UPDATE SANPHAM
    SET TENSP = P_TENSP,
        DONGIA = P_DONGIA,
        SOLUONG = P_SOLUONG,
        LOAISP = P_LOAISP
    WHERE MASP = P_MASP;
END;
/

